buildscript {
    ext {
        commonsLang3Version = '3.12.0'
        asciidoctorVersion = '3.3.2'
        springRestDocsVersion = '2.0.6.RELEASE'
        jjwtVersion = '0.11.1'
        bcprovVersion = '1.70'
        snippetsDir = file('build/generated-snippets')
        restDocsDir = file('src/main/resources/static/docs')
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version "$asciidoctorVersion"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

group = 'com.devlog'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

repositories {
    mavenCentral()
}

dependencies {

    //=== spring security::crypto
    implementation 'org.springframework.security:spring-security-crypto'
    implementation "org.bouncycastle:bcprov-jdk15on:$bcprovVersion"
    //===

    //=== configuration processor
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    //===

    //=== jwt
    implementation "io.jsonwebtoken:jjwt-api:$jjwtVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"
    //===

    //=== model mapper
    implementation 'org.modelmapper:modelmapper:3.0.0'
    //===

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //=== query dsl
    implementation 'com.querydsl:querydsl-core'
    implementation 'com.querydsl:querydsl-jpa'

    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    //===

    //=== spring rest docs
    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:$springRestDocsVersion"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:$springRestDocsVersion"
    //===

    //=== lang3 for api error handling
    implementation "org.apache.commons:commons-lang3:$commonsLang3Version"
    //===
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

asciidoctor.doFirst {
    println("---------------- delete present asciidoctor.")
    delete restDocsDir
}

asciidoctor.doLast {
    println("---------------- asciidoctor is deleted!")
}

/** clean 태스크 실행시 QClass 삭제 */
clean {
    delete file('src/main/generated')
}

tasks.register('copyDocument', Copy) {
    dependsOn asciidoctor
    from file(asciidoctor.outputDir)
    into restDocsDir
}

build {
    dependsOn copyDocument
}

bootJar {
    dependsOn asciidoctor
    from file(asciidoctor.outputDir)
    into restDocsDir
}